function pde = datapeak1d
%% creates a 1-D target function u in Hilbert space H
% satisfying the Neumann BC

pde = struct('rhs',@rhs,'target',@target,'dtarget',@dtarget);

% right hand side
    function f = rhs(x)
        f = 205*exp(-100*x.^2) - 9795*exp(-25*(2*x + 1).^2) -...
            9795*exp(-25*(2*x - 1).^2) + 40800*x.*exp(-25*(2*x - 1).^2) -...
            40800*x.*exp(-25*(2*x + 1).^2) - 22014*x.^2.*exp(-25*(2*x - 1).^2) -...
            22014*x.^2.*exp(-25*(2*x + 1).^2) - 80800*x.^3.*exp(-25*(2*x - 1).^2) +...
            80800*x.^3.*exp(-25*(2*x + 1).^2) + 71801*x.^4.*exp(-25*(2*x - 1).^2) +...
            71801*x.^4.*exp(-25*(2*x + 1).^2) + 40000*x.^5.*exp(-25*(2*x - 1).^2) -...
            40000*x.^5.*exp(-25*(2*x + 1).^2) - 40000*x.^6.*exp(-25*(2*x - 1).^2) -...
            40000*x.^6.*exp(-25*(2*x + 1).^2) - 42014*x.^2.*exp(-100*x.^2) +...
            81801*x.^4.*exp(-100*x.^2) - 40000*x.^6.*exp(-100*x.^2);
    end

% exact solution
    function u = target(x)
        K = 0.01^(1);
        u = (1+x).^2.*(1-x).^2.*(exp(-(x).^2/K)+exp(-(x-(1/2)).^2/K)+exp(-(x+(1/2)).^2/K));
    end

% 1st order deravative
    function du = dtarget(x)
        du = (2*x - 2).*(x + 1).^2.*(exp(-100*x.^2) + exp(-100*(x - 1/2).^2) +...
             exp(-100*(x + 1/2).^2)) + (2*x + 2).*(x - 1).^2.*(exp(-100*x.^2) +...
             exp(-100*(x - 1/2).^2) + exp(-100*(x + 1/2).^2)) -...
             (x - 1).^2.*(x + 1).^2.*(200*x.*exp(-100*x.^2) +...
             exp(-100*(x - 1/2).^2).*(200*x - 100) +...
             exp(-100*(x + 1/2).^2).*(200*x + 100));
    end
end